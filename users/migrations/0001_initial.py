# Generated by Django 4.0.4 on 2022-07-31 14:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import posts.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('following', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profilePic', models.ImageField(blank=True, upload_to=posts.utils.upload_profilePic)),
                ('companyName', models.CharField(max_length=2048)),
                ('about', models.TextField(blank=True)),
                ('workEmail', models.EmailField(blank=True, max_length=254)),
                ('phoneNumber', models.CharField(blank=True, max_length=15)),
                ('website', models.CharField(blank=True, max_length=500)),
                ('foundedIn', models.DateField(blank=True, null=True)),
                ('employeeCount', models.CharField(blank=True, max_length=1024)),
                ('needEmployee', models.BooleanField(blank=True, null=True)),
                ('category', models.ManyToManyField(blank=True, related_name='company', to='users.category')),
            ],
        ),
        migrations.CreateModel(
            name='Industries',
            fields=[
                ('title', models.CharField(max_length=1024, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024, unique=True)),
                ('industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='role', to='users.industries')),
            ],
        ),
        migrations.CreateModel(
            name='Tech',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1024, null=True, unique=True)),
                ('industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tech', to='users.industries')),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024)),
                ('company', models.CharField(max_length=1024)),
                ('start', models.DateField()),
                ('end', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workExperience', to=settings.AUTH_USER_MODEL)),
                ('tech', models.ManyToManyField(blank=True, related_name='workExperience', to='users.tech')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('slug', models.SlugField(blank=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('markAsRead', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024)),
                ('count', models.PositiveIntegerField()),
                ('jobType', models.CharField(choices=[('F', 'Full-time'), ('C', 'Contract'), ('I', 'Internship'), ('R', 'Remote')], max_length=1)),
                ('salary', models.CharField(blank=True, max_length=1024)),
                ('text', models.TextField(blank=True)),
                ('seo', models.JSONField(blank=True, null=True)),
                ('category', models.ManyToManyField(related_name='jobOffer', to='users.category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobOffer', to='users.company')),
                ('job', models.ManyToManyField(blank=True, related_name='jobOffer', to='users.job')),
                ('tech', models.ManyToManyField(blank=True, related_name='jobOffer', to='users.tech')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('profilePic', models.ImageField(blank=True, upload_to=posts.utils.upload_profilePic)),
                ('about', models.TextField(blank=True)),
                ('address', models.CharField(blank=True, max_length=1024)),
                ('phoneNumber', models.CharField(max_length=13)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('D', "Don't wanna say")], max_length=1)),
                ('relationshipStatus', models.CharField(choices=[('S', 'Single'), ('M', 'Married')], max_length=1)),
                ('jobSearchStatus', models.CharField(choices=[('A', 'Actively looking right now'), ('O', 'Open, but not actively looking'), ('N', 'Not interested in jobs')], max_length=1)),
                ('minimumAnnualSalary', models.PositiveIntegerField(blank=True, null=True)),
                ('jobType', models.CharField(blank=True, choices=[('F', 'Full-time'), ('C', 'Contract'), ('I', 'Internship')], max_length=1)),
                ('hire', models.BooleanField(blank=True, null=True)),
                ('category', models.ManyToManyField(blank=True, related_name='employee', to='users.category')),
                ('industries', models.ManyToManyField(blank=True, related_name='employeeProfileIndustries', to='users.industries')),
                ('industriesToExclude', models.ManyToManyField(blank=True, related_name='employeeProfileIndustriesToExclude', to='users.industries')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL)),
                ('role', models.ManyToManyField(blank=True, related_name='employee', to='users.job')),
                ('techWantsToNotWorkWith', models.ManyToManyField(blank=True, related_name='employeeProfileTechWantsToNotWorkWith', to='users.tech')),
                ('techWantsToWorkWith', models.ManyToManyField(blank=True, related_name='employeeProfileTechWantsToWorkWith', to='users.tech')),
            ],
        ),
        migrations.CreateModel(
            name='EducationalBackground',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grad', models.CharField(max_length=1024)),
                ('major', models.CharField(max_length=1024)),
                ('educationalInstitute', models.CharField(max_length=1024)),
                ('start', models.DateField()),
                ('end', models.DateField(blank=True, null=True)),
                ('adjusted', models.DecimalField(decimal_places=2, max_digits=4)),
                ('description', models.TextField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educationalBackground', to='users.employee')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='industries',
            field=models.ManyToManyField(blank=True, related_name='company', to='users.industries'),
        ),
        migrations.AddField(
            model_name='company',
            name='profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='industry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category', to='users.industries'),
        ),
        migrations.AddField(
            model_name='category',
            name='upperCategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reverseCategory', to='users.category'),
        ),
        migrations.CreateModel(
            name='ApplyForJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('e', 'employee'), ('c', 'company')], max_length=1)),
                ('text', models.TextField()),
                ('status', models.CharField(choices=[('w', 'waiting'), ('a', 'accepted'), ('r', 'rejected')], default='w', max_length=1)),
                ('nonCooperation', models.BooleanField(default=False)),
                ('nonCooperationDate', models.DateField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applyForJob', to='users.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applyForJob', to='users.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024)),
                ('certificateProvider', models.CharField(max_length=1024)),
                ('date', models.DateField()),
                ('siteAddress', models.CharField(blank=True, max_length=1024)),
                ('description', models.TextField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievement', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
